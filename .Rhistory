mutate(log_delay = log2(abs(values))) %>%
ggplot(mapping = aes(x = delay, y = log_delay)) +
geom_boxplot()
weather
weather %>%
left_join(flights, by = "year", "month", "day", "hour", "origin")
flights
weather %>%
left_join(flights, by = c("year" = "year", "month" = "month",
"day" = "day", "hour" = "hour", "origin" = "origin"))
quantile(weather$precip)
quantile
?quantile
quantile(weather$precip, 0.9)
quantile(weather$precip, probs = (0.9, 1.0))
quantile(weather$precip, probs = (0.9)
quantile(weather$precip, probs = (0.9))
weather %>%
left_join(flights, by = c("year" = "year", "month" = "month",
"day" = "day", "hour" = "hour", "origin" = "origin")) %>%
filter(precip > quantile(precip, probs = 0.9))
weather %>%
left_join(flights, by = c("year" = "year", "month" = "month",
"day" = "day", "hour" = "hour", "origin" = "origin")) %>%
filter(precip > quantile(precip, probs = 0.9)) %>%
select(carrier) %>%
summarise(count = n())
weather %>%
left_join(flights, by = c("year" = "year", "month" = "month",
"day" = "day", "hour" = "hour", "origin" = "origin")) %>%
filter(precip > quantile(precip, probs = 0.9)) %>%
group_by(carrier) %>%
summarise(count = n())
high_precip <- weather %>%
left_join(flights, by = c("year" = "year", "month" = "month",
"day" = "day", "hour" = "hour", "origin" = "origin")) %>%
filter(precip > quantile(precip, probs = 0.9)) %>%
group_by(carrier) %>%
summarise(count = n())
high_precip <- weather %>%
left_join(flights, by = c("year" = "year", "month" = "month",
"day" = "day", "hour" = "hour", "origin" = "origin")) %>%
filter(precip > quantile(precip, probs = 0.9)) %>%
group_by(carrier) %>%
summarise(count = n()) %>%
full_join(group_by(flights, carrier) %>% summarise(count = n()))
high_precip
high_precip <- weather %>%
left_join(flights, by = c("year" = "year", "month" = "month",
"day" = "day", "hour" = "hour", "origin" = "origin")) %>%
filter(precip > quantile(precip, probs = 0.9)) %>%
group_by(carrier) %>%
summarise(count = n())
high_precip
setwd("~/Dropbox/BIOS_611_2019/GitHub/bios611-projects-fall-2019-ajLuna7")
# read in data
UMD_data =  read_tsv("data/UMD_Services_Provided_20190719.tsv")
UMD_data
# Check the `Field 1 - 3` variables, are they empty?
# from: https://www.quora.com/How-do-I-get-a-frequency-count-based-on-two-columns-variables-in-an-R-dataframe
summarise(group_by(UMD_data, `Field1`, `Field2`, `Field3`), count = n())
# Remove Field1, Field2, and Field3 since they are all NAs
UMD_data2 <- UMD_data %>%
select(-`Client File Merge`, -`Field1`, -`Field2`, -`Field3`)
# change date format
UMD_data2$Date <- as.Date(UMD_data2$Date, "%m/%d/%Y")
#
UMD_food <- UMD_data2 %>%
select(Date, `Client File Number`, `Food Provided for`, `Food Pounds`, `Clothing Items`) %>%
drop_na(`Food Provided for`,`Food Pounds`, `Clothing Items`) %>%
filter(Date >= "2000-01-01", Date <= "2019-12-31", `Food Provided for` < 30, `Food Pounds` <= 25) %>%
separate(Date, into = c("Year", "Month", "Day"), sep = "-") %>%
group_by(Month, Year, Day) %>%
summarise(count = n(),
lbs_per_prsn = sum(`Food Pounds`) / sum(`Food Provided for`),
food_pounds_mean = mean(`Food Pounds`, na.rm = TRUE),
ppl_avg = mean(`Food Provided for`, na.rm = TRUE),
clothes_mean = mean(`Clothing Items`), na.rm= TRUE)
UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkorchid4", alpha = 1/3) +
geom_smooth(se = FALSE)
#
UMD_food <- UMD_data2 %>%
select(Date, `Client File Number`, `Food Provided for`, `Food Pounds`, `Clothing Items`) %>%
drop_na(`Food Provided for`,`Food Pounds`, `Clothing Items`) %>%
filter(Date >= "2000-01-01", Date <= "2019-12-31", `Food Provided for` < 30, `Food Pounds` <= 25) %>%
separate(Date, into = c("Year", "Month", "Day"), sep = "-") %>%
group_by(Month, Year, Day) %>%
summarise(count = n(),
lbs_per_prsn = sum(`Food Pounds`) / sum(`Food Provided for`),
food_pounds_mean = mean(`Food Pounds`, na.rm = TRUE),
ppl_avg = mean(`Food Provided for`, na.rm = TRUE),
clothes_mean = mean(`Clothing Items`), na.rm= TRUE)
UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkorchid4", alpha = 1/3) +
geom_smooth(se = FALSE)
#
UMD_food <- UMD_data2 %>%
select(Date, `Client File Number`, `Food Provided for`, `Food Pounds`, `Clothing Items`) %>%
drop_na(`Food Provided for`,`Food Pounds`, `Clothing Items`) %>%
filter(Date >= "2000-01-01", Date <= "2019-12-31", `Food Provided for` < 30, `Food Pounds` <= 25) %>%
separate(Date, into = c("Year", "Month", "Day"), sep = "-") %>%
group_by(Month, Year, Day) %>%
summarise(count = n(),
lbs_per_prsn = sum(`Food Pounds`) / sum(`Food Provided for`),
food_pounds_sum = sum(`Food Pounds`, na.rm = TRUE),
ppl_avg = mean(`Food Provided for`, na.rm = TRUE),
clothes_sum = sum(`Clothing Items`), na.rm= TRUE)
# help from: https://www.earthdatascience.org/courses/earth-analytics/time-series-data/summarize-time-series-by-month-in-r/
UMD_food %>%
#mutate(month2 = as.Date(paste0("2019-", Month, "-01"), "%Y-%m-%d")) %>% # 2019 and 01 are dummy numbers, just trying to use format for month
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkorchid4") +
geom_smooth(se = FALSE) +
facet_wrap(~ Year, ncol = 4) +
labs(title = "Clothing Items & Food Pounds per day, 2000 - 2019",
subtitle = "Data plotted by year",
x = "Log of Sum of Food Pounds per day",
y = "Log of Clothing Items per day") + theme_bw(base_size = 15) #+
UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkorchid4", alpha = 1/3) +
geom_smooth(se = FALSE)
cor(colthes_sum, food_pounds_sum)
cor(UMD_food$colthes_sum, fUMD_food$ood_pounds_sum)
cor(UMD_food$colthes_sum, UMD_food$ood_pounds_sum)
cor(UMD_food$colthes_sum, UMD_food$food_pounds_sum)
cor(UMD_food$clothes_sum, UMD_food$food_pounds_sum)
p1 <- UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE) +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day")
p1
p1 <- UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "red") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day")
p1
p1 <- UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day")
p1
p1 <- UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day")
p1
cor(log2(UMD_food$clothes_sum), log2(UMD_food$food_pounds_sum))
cor(log2(UMD_food$clothes_sum), log2(UMD_food$food_pounds_sum))
log2(UMD_food$clothes_sum)
log2(UMD_food$food_pounds_sum)
cor(log2(UMD_food$clothes_sum), log2(UMD_food$food_pounds_sum))
?cor
typeof(log2(UMD_food$food_pounds_sum))
class(log2(UMD_food$food_pounds_sum))
p1 <- UMD_food %>%
ggplot(aes(x = log(clothes_sum), y = log(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day")
p1
cor(log(UMD_food$clothes_sum), log(UMD_food$food_pounds_sum))
cor(UMD_food$clothes_sum, UMD_food$food_pounds_sum)
cor(UMD_food$clothes_sum, UMD_food$food_pounds_sum, method = "pearson")
cor(log(UMD_food$clothes_sum), log(UMD_food$food_pounds_sum), method = "pearson")
cor(log(UMD_food$clothes_sum), log(UMD_food$food_pounds_sum), method = "pearson", use = "pairwise")
cor(log(UMD_food$clothes_sum), log(UMD_food$food_pounds_sum), use = "pairwise")
cor(log(UMD_food$clothes_sum), log(UMD_food$food_pounds_sum), use = "complete.obs")
is.numeric(log(UMD_food$clothes_sum))
is.numeric(log(UMD_food$food_pounds_sum))
cor(log(UMD_food$clothes_sum), log(UMD_food$food_pounds_sum), na.rm = TRUE)
cor(log(UMD_food$clothes_sum), log(UMD_food$food_pounds_sum), use = "everything")
cor(as.numeric(log(UMD_food$clothes_sum)), as.numeric(log(UMD_food$food_pounds_sum)))
class(UMD_food$clothes_sum)
typeof(UMD_food$clothes_sum)
typeof(log(UMD_food$food_pounds_sum))
class(log(UMD_food$food_pounds_sum))
log(-1)
summary(log(UMD_food$food_pounds_sum))
range(log(UMD_food$food_pounds_sum))
range(log10(UMD_food$food_pounds_sum))
log(0)
range(UMD_food)
range(UMD_food$clothes_sum)
range(UMD_food$ppl_avg)
#
UMD_food <- UMD_data2 %>%
select(Date, `Client File Number`, `Food Provided for`, `Food Pounds`, `Clothing Items`) %>%
drop_na(`Food Provided for`,`Food Pounds`, `Clothing Items`) %>%
filter(Date >= "2000-01-01", Date <= "2019-12-31", `Food Provided for` < 30, `Food Pounds` <= 25) %>%
separate(Date, into = c("Year", "Month", "Day"), sep = "-") %>%
group_by(Month, Year, Day) %>%
summarise(count = n(),
lbs_per_prsn = sum(`Food Pounds`) / sum(`Food Provided for`),
food_pounds_sum = sum(`Food Pounds`, na.rm = TRUE),
ppl_avg = mean(`Food Provided for`, na.rm = TRUE),
clothes_sum = sum(`Clothing Items`), na.rm= TRUE) %>%
filter(lbs_per_prsn > 0, food_pounds_sum > 0, ppl_avg > 0, clothes_sum > 0)
cor(UMD_food$clothes_sum, UMD_food$food_pounds_sum, method = "pearson")
cor(log(UMD_food$clothes_sum),log(UMD_food$food_pounds_sum))
cor.test(log(UMD_food$clothes_sum),log(UMD_food$food_pounds_sum))
cor(UMD_food$clothes_sum, UMD_food$food_pounds_sum, method = "pearson")
p1 <- UMD_food %>%
ggplot(aes(x = log(clothes_sum), y = log(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day") +
legend(x = "bottomright", legend = "Cor = 0.785945")
round(cor(UMD_food$clothes_sum, UMD_food$food_pounds_sum, method = "pearson"))
?round
round(cor(UMD_food$clothes_sum, UMD_food$food_pounds_sum, method = "pearson"), 3)
p1 <- UMD_food %>%
ggplot(aes(x = log(clothes_sum), y = log(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day") +
annotate("text", x = 4, y = 1.7, label = "Cor = 0.786")
p1
p1 <- UMD_food %>%
ggplot(aes(x = log(clothes_sum), y = log(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day") +
annotate("text", x = 4, y = 1.7, label = "r = 0.786")
p1
cor.test(log2(UMD_food$clothes_sum),log2(UMD_food$food_pounds_sum))
cor(log2(UMD_food$clothes_sum),log2(UMD_food$food_pounds_sum))
round(cor(log2(UMD_food$clothes_sum),log2(UMD_food$food_pounds_sum)), 3)
# plot sums of clothes and food pounds
p1 <- UMD_food %>%
ggplot(aes(x = clothes_sum, y = food_pounds_sum)) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day") +
annotate("text", x = 4, y = 1.7, label = "r = 0.786")
p1
# plot sums of clothes and food pounds
p1 <- UMD_food %>%
ggplot(aes(x = clothes_sum, y = food_pounds_sum)) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day") +
annotate("text", x = 100, y = 1.7, label = "r = 0.786")
p1
# plot sums of clothes and food pounds
p1 <- UMD_food %>%
ggplot(aes(x = clothes_sum, y = food_pounds_sum)) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Pounds of Food per Day") +
annotate("text", x = 150, y = 50, label = "r = 0.786")
p1
# same variables, but log transformed
p2  <- UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkorchid4", alpha = 1/3) +
geom_smooth(se = FALSE) +
labs(title = "Sums of Clothes Items and Food \n(Log Transformed), 2000 - 2019")
p2
# plot sums of clothes and food pounds
p1 <- UMD_food %>%
ggplot(aes(x = clothes_sum, y = food_pounds_sum)) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Pounds of Food, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Food lbs per Day") +
annotate("text", x = 150, y = 50, label = "r = 0.786")
round(cor(log2(UMD_food$clothes_sum),log2(UMD_food$food_pounds_sum)), 3)
# same variables, but log transformed
p2  <- UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkorchid4", alpha = 1/3) +
geom_smooth(se = FALSE) +
labs(title = "Sums of Clothes Items and Food \n(Log Transformed), 2000 - 2019",
x = "Log of Summed Clothes Items",
y = "Log of Summed Food lbs") +
annotate("text", x = 5, y = 2, label = "r = 0.769")
p2
grid.arrange(p1, p2, nrow = 1)
?par
par(mfrow = c(1,2))
p1
p2
par(mfrow = c(1,2))
p1
install.packages("GridExtra")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2, nrow = 1)
# same variables, but log transformed
p2  <- UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Food \n(Log Transformed), 2000 - 2019",
x = "Log of Summed Clothes Items",
y = "Log of Summed Food lbs") +
annotate("text", x = 5, y = 2, label = "r = 0.769")
# plot sums of clothes and food pounds
p1 <- UMD_food %>%
ggplot(aes(x = clothes_sum, y = food_pounds_sum)) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Pounds of Food,\n 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Food lbs per Day") +
annotate("text", x = 150, y = 50, label = "r = 0.786")
grid.arrange(p1, p2, nrow = 1)
# plot sums of clothes and food pounds
p1 <- UMD_food %>%
ggplot(aes(x = clothes_sum, y = food_pounds_sum)) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Food\n lbs, 2000 - 2019",
x = "Sum of Clothes Items per Day",
y = "Sum of Food lbs per Day") +
annotate("text", x = 150, y = 50, label = "r = 0.786")
# same variables, but log transformed
p2  <- UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Food lbs \n(Log Transformed), 2000 - 2019",
x = "Log of Summed Clothes Items",
y = "Log of Summed Food lbs") +
annotate("text", x = 5, y = 2, label = "r = 0.769")
grid.arrange(p1, p2, nrow = 1)
grid.arrange(p1, p2, nrow = 1)
# plot sums of clothes and food pounds
p1 <- UMD_food %>%
ggplot(aes(x = clothes_sum, y = food_pounds_sum)) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Daily Sums of Clothes Items\n and Foodlbs, 2000 - 2019",
x = "Sum of clothes Items per day",
y = "Sum of food lbs per day") +
annotate("text", x = 150, y = 50, label = "r = 0.786")
# same variables, but log transformed
p2  <- UMD_food %>%
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Sums of Clothes Items and Food lbs \n(Log Transformed), 2000 - 2019",
x = "Log of daily summed clothes items",
y = "Log of daily summed food lbs") +
annotate("text", x = 5, y = 2, label = "r = 0.769")
grid.arrange(p1, p2, nrow = 1)
# plot sums of clothes and food pounds
p1 <- UMD_food %>%
ggplot(aes(x = clothes_sum, y = food_pounds_sum)) +
geom_point(color = "darkslateblue", alpha = 1/3) +
geom_smooth(se = FALSE, color = "deeppink3") +
labs(title = "Daily Sums of Clothes Items\n and Food lbs, 2000 - 2019",
x = "Sum of clothes Items per day",
y = "Sum of food lbs per day") +
annotate("text", x = 150, y = 50, label = "r = 0.786")
# help from: https://www.earthdatascience.org/courses/earth-analytics/time-series-data/summarize-time-series-by-month-in-r/
UMD_food %>%
#mutate(month2 = as.Date(paste0("2019-", Month, "-01"), "%Y-%m-%d")) %>% # 2019 and 01 are dummy numbers, just trying to use format for month
ggplot(aes(x = log2(clothes_sum), y = log2(food_pounds_sum))) +
geom_point(color = "darkslateblue") +
geom_smooth(se = FALSE, color = "deeppink3") +
facet_wrap(~ Year, ncol = 4) +
labs(title = "Logged Clothing Items & Food Pounds per day, 2000 - 2019",
subtitle = "Data plotted by year",
x = "Log of sum of food lbs per day",
y = "Log of clothing items per day") + theme_bw(base_size = 15) #+
# Plotting yearly food lbs per year on a monthly basis
# help from:
# https://www.earthdatascience.org/courses/earth-analytics/time-series-data/summarize-time-series-by-month-in-r/
UMD_food %>%
mutate(month2 = as.Date(paste0("2019-", Month, "-01"), "%Y-%m-%d")) %>% # 2019 and 01 are dummy numbers, just trying to use format for month
ggplot(aes(x = Month, y = food_pounds_sum)) +
geom_bar(stat = "identity", fill = "darkslateblue") +
facet_wrap(~ Year, ncol = 4) +
labs(title = "Monthly Pounds of Food, 2000 - 2019",
subtitle = "Data plotted by year",
x = "Log of sum of food lbs per day",
y = "Log of clothing items per day") + theme_bw(base_size = 15) +
scale_x_date(date_labels = "%b")
# Plotting yearly food lbs per year on a monthly basis
# help from:
# https://www.earthdatascience.org/courses/earth-analytics/time-series-data/summarize-time-series-by-month-in-r/
UMD_food %>%
mutate(month2 = as.Date(paste0("2019-", Month, "-01"), "%Y-%m-%d")) %>% # 2019 and 01 are dummy numbers, just trying to use format for month
ggplot(aes(x = month2, y = food_pounds_sum)) +
geom_bar(stat = "identity", fill = "darkslateblue") +
facet_wrap(~ Year, ncol = 4) +
labs(title = "Monthly Pounds of Food, 2000 - 2019",
subtitle = "Data plotted by year",
x = "Log of sum of food lbs per day",
y = "Log of clothing items per day") + theme_bw(base_size = 15) +
scale_x_date(date_labels = "%b")
View(UMD_food)
# Plotting yearly food lbs per year on a monthly basis
# help from:
# https://www.earthdatascience.org/courses/earth-analytics/time-series-data/summarize-time-series-by-month-in-r/
UMD_food %>%
group_by(Month) %>%
summarise(food_pounds_sum2 = food_pounds_sum)
# Plotting yearly food lbs per year on a monthly basis
# help from:
# https://www.earthdatascience.org/courses/earth-analytics/time-series-data/summarize-time-series-by-month-in-r/
UMD_food %>%
mutate(month2 = as.Date(paste0("2019-", Month, "-01"), "%Y-%m-%d")) %>% # 2019 and 01 are dummy numbers, just trying to use format for month
ggplot(aes(x = month2, y = food_pounds_sum)) +
geom_bar(stat = "identity", fill = "darkslateblue") +
facet_wrap(~ Year, ncol = 4) +
labs(title = "Monthly Pounds of Food, 2000 - 2019",
subtitle = "Data plotted by year",
x = "Log of sum of food lbs per day",
y = "Log of clothing items per day") + theme_bw(base_size = 15) +
scale_x_date(date_labels = "%b")
UMD_food %>%
mutate(month2 = as.Date(paste0("2019-", Month, "-01"), "%Y-%m-%d"))
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
plot(pressure)
plot(pressure)
head(UMD_data)
# Remove Field1, Field2, and Field3 since they are all NAs
UMD_data2 <- UMD_data %>%
select(-`Client File Merge`, -`Field1`, -`Field2`, -`Field3`)
# Check the `Field 1 - 3` variables, are they empty?
# from: https://www.quora.com/How-do-I-get-a-frequency-count-based-on-two-columns-variables-in-an-R-dataframe
summarise(group_by(UMD_data, `Field1`, `Field2`, `Field3`), count = n())
# Remove Field1, Field2, and Field3 since they are all NAs
UMD_data2 <- UMD_data %>%
select(-`Client File Merge`, -`Field1`, -`Field2`, -`Field3`)
# change date format so R can interpret it
UMD_data2$Date <- as.Date(UMD_data2$Date, "%m/%d/%Y")
head(UMD_data$Date)
# Plotting yearly food lbs per year on a monthly basis, using bar graph
# help from:
# https://www.earthdatascience.org/courses/earth-analytics/time-series-data/summarize-time-series-by-month-in-r/
UMD_food %>% # create new monthly variable for bar graph
mutate(month2 = as.Date(paste0("2019-", Month, "-01"), "%Y-%m-%d")) %>% # 2019 and 01 are dummy numbers, just trying to use format for month
ggplot(aes(x = month2, y = food_pounds_sum)) +
geom_bar(stat = "identity", fill = "darkslateblue") +
facet_wrap(~ Year, ncol = 4) +
labs(title = "Monthly Pounds of Food, 2000 - 2019",
subtitle = "Data plotted by year",
x = "Log of sum of food lbs per day",
y = "Log of clothing items per day") + theme_bw(base_size = 15) +
scale_x_date(date_labels = "%b")
getwd()
setwd("~/Dropbox/BIOS_611_2019/GitHub/bios611-projects-fall-2019-ajLuna7")
library(dplyr)
library(tidyr)
library(stringr)
library(tidyverse)
# install.packages("GGally")
library(GGally)
# install.packages("gridExtra")
library(gridExtra)
# read in data, this Rmd is saved in my "scripts" folder and when I knit it reads automatically
# from "scripts", so I included ".." which brings it out of that directory so it can access #"data"
UMD_data =  read_tsv("../data/UMD_Services_Provided_20190719.tsv")
library(dplyr)
library(tidyr)
library(stringr)
library(tidyverse)
# install.packages("GGally")
library(GGally)
# install.packages("gridExtra")
library(gridExtra)
# read in data, this Rmd is saved in my "scripts" folder and when I knit it reads automatically
# from "scripts", so I included ".." which brings it out of that directory so it can access #"data"
UMD_data =  read_tsv("../data/UMD_Services_Provided_20190719.tsv")
# Plotting yearly food lbs per year on a monthly basis, using bar graph
# help from:
# https://www.earthdatascience.org/courses/earth-analytics/time-series-data/summarize-time-series-by-month-in-r/
UMD_food %>% # create new monthly variable for bar graph
mutate(month2 = as.Date(paste0("2019-", Month, "-01"), "%Y-%m-%d")) %>% # 2019 and 01 are dummy numbers, just trying to use format for month
ggplot(aes(x = month2, y = food_pounds_sum)) +
geom_bar(stat = "identity", fill = "darkslateblue") +
facet_wrap(~ Year, ncol = 4) +
labs(title = "Monthly Pounds of Food, 2000 - 2019",
subtitle = "Data plotted by year",
x = "Month",
y = "Food Pounds") + theme_bw(base_size = 15) +
scale_x_date(date_labels = "%b")
